{"version":3,"sources":["components/Set1/Header/arrow.module.css","components/Set2/Header/arrow.module.css","Login/Login.js","components/Set1/Header/Header.js","components/Set1/Dashboard/Dashboard.js","components/Set1/Project/Project.js","components/Set1/Report/Report.js","Login/ResetPassword.js","components/Set1/Profile/FormikDatePicker.js","components/Set1/Profile/Select.js","components/Set1/Profile/countries.js","components/Set1/Profile/states.js","components/Set1/Profile/cities.js","components/Set1/Profile/ProfileHeader.js","components/Set1/Profile/Profile.js","components/Set1/Settings/FormikRadioGroup.js","components/Set1/Settings/Settings.js","components/Set1/Project/ProjectHeader.js","components/Set1/Project/Production.js","components/Set1/Project/Review.js","components/Set1/Project/Productionx.js","components/Set1/Project/Reviewx.js","components/Set2/Header/Header.js","components/Set2/Dashboard/DashboardTwo.js","components/Set2/Project/Project.js","components/Set2/Reports/Report.js","components/Set2/Users/Switch.js","components/Set2/Users/Toggle.js","components/Set2/Users/UserHeader.js","components/Set2/Users/User.js","components/Set2/Users/CreateHeader.js","components/Set2/Users/CreateUser.js","components/Set2/Profile/ProHeader.js","components/Set2/Profile/Role.js","components/Set2/Profile/Settings.js","App.js","serviceWorker.js","index.js","assets/logo.png"],"names":["module","exports","Login","Navbar","color","light","expand","NavbarBrand","href","className","src","logo","alt","Row","Col","md","initialValues","email","password","facode","validationSchema","Yup","shape","required","min","matches","onSubmit","fields","alert","JSON","stringify","errors","touched","status","htmlFor","name","type","component","to","React","Component","Header","props","toggleDropdown","setState","prevState","isOpen","state","this","Nav","navbar","NavItem","NavLink","tag","RRNavLink","activeClassName","placeholder","Dropdown","toggle","DropdownToggle","cx","s","arrow","arrowActive","DropdownMenu","DropdownItem","Dashboard","loading","bind","onRadioBtnClick","dropdownOpen","radioSelected","Table","Progress","value","Project","Report","ResetPassword","FormikDatePicker","useState","Date","selectedDate","handleDateChange","utils","DateFnsUtils","keyboard","clearable","format","onChange","Selectbox","field","form","options","option","setFieldValue","countryOptions","label","stateOptions","cityOptions","ProfileHeader","aria-hidden","Profile","country","val","date","firstname","lastname","phonenumber","FormikRadioGroup","fieldName","Fragment","RadioGroup","map","FormControlLabel","control","Radio","Settings","Schema","changepassword","when","is","length","then","oneOf","values","handleSubmit","handleChange","handleBlur","onBlur","style","ProjectHeader","Production","Input","Review","Productionx","imageurl","taskid","trainingmaterial","comments","Reviewx","DashboardTwo","ProjectSupervisor","ReportSupervisor","Style","styled","div","Switch","on","onSwitch","onClick","Toggle","onToggle","children","UserHeader","User","CreateHeader","CreateUser","gender","dateofbirth","city","address","zip","ProHeader","Role","Checkbox","SupervisorSettings","App","basename","process","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98c85045.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"arrow_arrow__2oHU9\",\"arrowActive\":\"arrow_arrowActive__2jZ6H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"arrow_arrow__3nd6h\",\"arrowActive\":\"arrow_arrowActive__2cHpU\"};","import React from 'react';\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { Col, Row, Nav, Navbar, NavItem, NavbarBrand } from 'reactstrap';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport './login.css';\r\n\r\nimport logo from '../assets/logo.png';\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n              <NavbarBrand href=\"/\" className=\"nav\"><img src={logo} alt=\"VentureSoft Global\" /></NavbarBrand>\r\n              </Navbar>\r\n            <Row>\r\n                <Col md=\"4\"></Col>\r\n                <Col md=\"4\" className=\"login-form\">\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    facode: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string()\r\n                        .email('Email is invalid')\r\n                        .required('Email is required'),\r\n                    password: Yup.string()\r\n                        .min(8, 'Password must be at least 6 characters')\r\n                        .required('Password is required')\r\n                        .matches(\r\n                            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n                            \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"),\r\n                    facode: Yup.number()\r\n                         .min(4, '2FACODE must be 4 digit number')\r\n                         .required('Code required')\r\n                })}\r\n                onSubmit={fields => {\r\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\r\n                }}\r\n            >\r\n                {({ errors, status, touched }) => (\r\n                    <Form>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\" className=\"col-form-label\">Email ID</label>\r\n                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\" className=\"col-form-label\">Password</label>\r\n                            <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"facode\" className=\"col-form-label\">2FACODE</label>\r\n                            <Field name=\"facode\" type=\"facode\" className={'form-control' + (errors.facode && touched.facode ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"facode\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\">Sign In</button>\r\n                            {/* <button type=\"reset\" className=\"btn btn-secondary\">Reset</button> */}\r\n\r\n                            <Link to=\"/login/resetpassword\" className=\"forgot-pwd\">Forgot password</Link>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            </Col>\r\n            <Col md=\"4\"></Col>\r\n            </Row>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Login; ","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n  Input,\n  InputGroup,\n  InputGroupAddon\n} from 'reactstrap';\nimport { NavLink as RRNavLink } from 'react-router-dom';\nimport cx from 'classnames';\n\nimport logo from '../../../assets/logo.png';\nimport s from './arrow.module.css';\n\nimport './header.css';\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { isOpen: false }\n    }\n    \n    toggleDropdown = () => {\n        this.setState(prevState => ({\n          isOpen: !prevState.isOpen,\n        }));\n      }\n    \n    render() { \n        const {isOpen} = this.state;\n        \n        return ( \n            <Navbar color=\"light\" light expand=\"md\">\n              <NavbarBrand href=\"/\" className=\"nav\"><img src={logo} alt=\"VentureSoft Global\" /></NavbarBrand>\n              <Nav className=\"d-md-down-none\" navbar>\n                <NavItem className=\"px-3\">\n                  <NavLink tag={RRNavLink} to=\"/dashboard\" activeClassName=\"active\" className=\"nav-link\" >Dashboard</NavLink>\n                </NavItem>\n                <NavItem className=\"px-3\">\n                  <NavLink tag={RRNavLink} to=\"/project\" activeClassName=\"active\" className=\"nav-link\">Project</NavLink>\n                </NavItem>\n                <NavItem className=\"px-3\">\n                  <NavLink tag={RRNavLink} to=\"/report\" activeClassName=\"active\" className=\"nav-link\">Report</NavLink>\n                </NavItem>\n                </Nav>\n                <Nav className=\"ml-auto\">\n                <NavItem>\n           \n                <div className=\"form-group has-search\">\n                  <span className=\"fa fa-search form-control-feedback\"></span>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Search\" />\n                </div>\n          \n                </NavItem>\n                  <Dropdown isOpen={isOpen} toggle={this.toggleDropdown}>\n                    <DropdownToggle>\n                      <span className=\"text-body\">Agent 1</span>\n                      <i className={cx('fa fa-angle-down ml-sm', s.arrow, {[s.arrowActive]: isOpen})} />\n                    </DropdownToggle>\n                    <DropdownMenu>\n                      <DropdownItem><i className=\"fa fa-user\"></i><Link to=\"/profile\" className=\"btn-logout\"> Profile</Link></DropdownItem>\n                      <DropdownItem><i className=\"fa fa-wrench\"></i><Link to=\"/settings\" className=\"btn-logout\"> Settings</Link></DropdownItem>\n                      <DropdownItem><i className=\"fa fa-lock\"></i><Link to=\"/\" className=\"btn-logout\"> Logout</Link></DropdownItem>\n                    </DropdownMenu>\n                  </Dropdown>\n                </Nav>\n           </Navbar>\n         );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Badge,\n  Button,\n  ButtonDropdown,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Col,\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Progress,\n  Row,\n  Table,\n  Breadcrumb,\n  BreadcrumbItem\n} from 'reactstrap';\nimport Header from '../Header/Header';\n\nimport './dashboard.css';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n\n    this.state = {\n      dropdownOpen: false,\n      radioSelected: 2,\n    };\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  onRadioBtnClick(radioSelected) {\n    this.setState({\n      radioSelected: radioSelected,\n    });\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  render() {\n\n    return (\n      <div className=\"animated fadeIn\">\n            <Header />\n            <Row className=\"gr-message\">\n            <Col md=\"4\"></Col>\n            <Col md=\"4\">\n            <div className=\"success-message\">\n                Hi Agent1! You are logged in as Agent\n            </div>\n            </Col>\n            </Row>\n            <Col md=\"4\"></Col>\n            <div className=\"table-data\">\n                <Table>\n                  <thead>\n                  <tr>\n                    <th>Project</th>\n                    <th>Tasks Available</th>\n                    <th>Task Completed</th>\n                    <th>Progress</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  <tr>\n                   \n                    <td>\n                      <div><Link className=\"pr-1\" to=\"/production\">Project X</Link></div>\n                    </td>\n                    <td>\n                      <div>9852</div>\n                    </td>\n                    <td>\n                      <div>7520</div>\n                    </td>\n                    <td>\n                      <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                          <strong>76.3%</strong>\n                        </div>\n                      </div>\n                      <Progress className=\"progress-xs\" color=\"success\" value=\"50\" />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <div>Project Y</div>\n                    </td>\n                    <td>\n                      <div>6547</div>\n                    </td>\n                    <td>\n                      <div>3052</div>\n                    </td>\n                    <td>\n                      <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                          <strong>46.6%</strong>\n                        </div>\n                      </div>\n                      <Progress className=\"progress-xs\" color=\"success\" value=\"50\" />\n                    </td>\n                  </tr>\n                  <tr>\n                   \n                    <td>\n                      <div>Project X</div>\n                    </td>\n                    <td>\n                      <div>9852</div>\n                    </td>\n                    <td>\n                      <div>7520</div>\n                    </td>\n                    <td>\n                      <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                          <strong>76.3%</strong>\n                        </div>\n                      </div>\n                      <Progress className=\"progress-xs\" color=\"success\" value=\"50\" />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <div>Project Y</div>\n                    </td>\n                    <td>\n                      <div>6547</div>\n                    </td>\n                    <td>\n                      <div>3052</div>\n                    </td>\n                    <td>\n                      <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                          <strong>46.6%</strong>\n                        </div>\n                      </div>\n                      <Progress className=\"progress-xs\" color=\"success\" value=\"50\" />\n                    </td>\n                  </tr>\n                  <tr>\n                   \n                    <td>\n                      <div>Project X</div>\n                    </td>\n                    <td>\n                      <div>9852</div>\n                    </td>\n                    <td>\n                      <div>7520</div>\n                    </td>\n                    <td>\n                      <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                          <strong>76.3%</strong>\n                        </div>\n                      </div>\n                      <Progress className=\"progress-xs\" color=\"success\" value=\"50\" />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <div>Project Y</div>\n                    </td>\n                    <td>\n                      <div>6547</div>\n                    </td>\n                    <td>\n                      <div>3052</div>\n                    </td>\n                    <td>\n                      <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                          <strong>46.6%</strong>\n                        </div>\n                      </div>\n                      <Progress className=\"progress-xs\" color=\"success\" value=\"50\" />\n                    </td>\n                  </tr>\n                  <tr>\n                   \n                    <td>\n                      <div>Project X</div>\n                    </td>\n                    <td>\n                      <div>9852</div>\n                    </td>\n                    <td>\n                      <div>7520</div>\n                    </td>\n                    <td>\n                      <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                          <strong>76.3%</strong>\n                        </div>\n                      </div>\n                      <Progress className=\"progress-xs\" color=\"success\" value=\"50\" />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <div>Project Y</div>\n                    </td>\n                    <td>\n                      <div>6547</div>\n                    </td>\n                    <td>\n                      <div>3052</div>\n                    </td>\n                    <td>\n                      <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                          <strong>46.6%</strong>\n                        </div>\n                      </div>\n                      <Progress className=\"progress-xs\" color=\"success\" value=\"50\" />\n                    </td>\n                  </tr>\n                  \n                  \n                  </tbody>\n                </Table>\n                </div>\n              \n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport {\n  Badge,\n  Button,\n  ButtonDropdown,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Col,\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Progress,\n  Row,\n  Table,\n  Breadcrumb,\n  BreadcrumbItem\n} from 'reactstrap';\nimport Header from '../Header/Header';\n\nimport './project.css';\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n\n    this.state = {\n      dropdownOpen: false,\n      radioSelected: 2,\n    };\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  onRadioBtnClick(radioSelected) {\n    this.setState({\n      radioSelected: radioSelected,\n    });\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  render() {\n\n    return (\n      <div className=\"animated fadeIn\">\n            <Header />\n            <Row className=\"gr-message\">\n            <Col md=\"4\"></Col>\n            <Col md=\"4\">\n            <div>\n                \n            </div>\n            </Col>\n            </Row>\n            <div className=\"table-data\">\n                <Table>\n                  <thead>\n                  <tr>\n                    <th>Project</th>\n                    <th>Annotation Type</th>\n                    <th>Acess to the project</th>\n                    <th>Project Code</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  <tr>\n                   \n                    <td>\n                      <div>Project X</div>\n                    </td>\n                    <td>\n                      <div>Image</div>\n                    </td>\n                    <td>\n                      <div>Yes</div>\n                    </td>\n                    <td>\n                      <div>PRX</div>\n                    </td>\n                    \n                  </tr>\n                  <tr>\n                   \n                   <td>\n                     <div>Project Y</div>\n                   </td>\n                   <td>\n                     <div>Image</div>\n                   </td>\n                   <td>\n                     <div className=\"red\">Not Assigned</div>\n                   </td>\n                   <td>\n                     <div>PRY</div>\n                   </td>\n                   \n                 </tr>\n                 <tr>\n                   \n                   <td>\n                     <div>Project Z</div>\n                   </td>\n                   <td>\n                     <div>Video</div>\n                   </td>\n                   <td>\n                     <div>Yes</div>\n                   </td>\n                   <td>\n                     <div>PRZ</div>\n                   </td>\n                   \n                 </tr>\n                 <tr>\n                   \n                   <td>\n                     <div>Project X</div>\n                   </td>\n                   <td>\n                     <div>Image</div>\n                   </td>\n                   <td>\n                     <div>Yes</div>\n                   </td>\n                   <td>\n                     <div>PRX</div>\n                   </td>\n                   \n                 </tr>\n                 <tr>\n                  \n                  <td>\n                    <div>Project Y</div>\n                  </td>\n                  <td>\n                    <div>Image</div>\n                  </td>\n                  <td>\n                    <div className=\"red\">Not Assigned</div>\n                  </td>\n                  <td>\n                    <div>PRY</div>\n                  </td>\n                  \n                </tr>\n                <tr>\n                  \n                  <td>\n                    <div>Project Z</div>\n                  </td>\n                  <td>\n                    <div>Video</div>\n                  </td>\n                  <td>\n                    <div>Yes</div>\n                  </td>\n                  <td>\n                    <div>PRZ</div>\n                  </td>\n                  \n                </tr>\n                 \n                 \n                 \n                <tr>\n                   \n                   <td>\n                     <div>Project X</div>\n                   </td>\n                   <td>\n                     <div>Image</div>\n                   </td>\n                   <td>\n                     <div>Yes</div>\n                   </td>\n                   <td>\n                     <div>PRX</div>\n                   </td>\n                   \n                 </tr>\n                 <tr>\n                  \n                  <td>\n                    <div>Project Y</div>\n                  </td>\n                  <td>\n                    <div>Image</div>\n                  </td>\n                  <td>\n                    <div className=\"red\">Not Assigned</div>\n                  </td>\n                  <td>\n                    <div>PRY</div>\n                  </td>\n                  \n                </tr>\n                <tr>\n                  \n                  <td>\n                    <div>Project Z</div>\n                  </td>\n                  <td>\n                    <div>Video</div>\n                  </td>\n                  <td>\n                    <div>Yes</div>\n                  </td>\n                  <td>\n                    <div>PRZ</div>\n                  </td>\n                  \n                </tr>\n                  </tbody>\n                </Table>\n                </div>\n              \n      </div>\n    );\n  }\n}\n\nexport default Project;\n","import React, { Component } from 'react';\nimport {\n  Badge,\n  Button,\n  ButtonDropdown,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Col,\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Progress,\n  Row,\n  Table,\n  Breadcrumb,\n  BreadcrumbItem\n} from 'reactstrap';\nimport Header from '../Header/Header';\n\nimport './report.css';\n\nclass Report extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n\n    this.state = {\n      dropdownOpen: false,\n      radioSelected: 2,\n    };\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  onRadioBtnClick(radioSelected) {\n    this.setState({\n      radioSelected: radioSelected,\n    });\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  render() {\n\n    return (\n      <div className=\"animated fadeIn\">\n            <Header />\n            <Row className=\"gr-message\">\n            <Col md=\"4\"></Col>\n            <Col md=\"4\">\n            <div>\n                \n            </div>\n            </Col>\n            </Row>\n            <div className=\"table-data\">\n                <Table>\n                  <thead>\n                  <tr>\n                    <th>Project</th>\n                    <th>Tasks Available</th>\n                    <th>Time per task(Secs)</th>\n                    <th>Avg time(hrs)</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  <tr>\n                   \n                    <td>\n                      <div>Project X</div>\n                    </td>\n                    <td>\n                      <div>2</div>\n                    </td>\n                    <td>\n                      <div>360</div>\n                    </td>\n                    <td>\n                      <div>2:05:12</div>\n                    </td>\n                    \n                  </tr>\n                  <tr>\n                   \n                    <td>\n                      <div>Project X</div>\n                    </td>\n                    <td>\n                      <div>2</div>\n                    </td>\n                    <td>\n                      <div>360</div>\n                    </td>\n                    <td>\n                      <div>2:05:12</div>\n                    </td>\n                    \n                  </tr>\n                  <tr>\n                   \n                   <td>\n                     <div>Project X</div>\n                   </td>\n                   <td>\n                     <div>2</div>\n                   </td>\n                   <td>\n                     <div>360</div>\n                   </td>\n                   <td>\n                     <div>2:05:12</div>\n                   </td>\n                   \n                 </tr>\n                 <tr>\n                   \n                   <td>\n                     <div>Project X</div>\n                   </td>\n                   <td>\n                     <div>2</div>\n                   </td>\n                   <td>\n                     <div>360</div>\n                   </td>\n                   <td>\n                     <div>2:05:12</div>\n                   </td>\n                   \n                 </tr>\n                 <tr>\n                   \n                   <td>\n                     <div>Project X</div>\n                   </td>\n                   <td>\n                     <div>2</div>\n                   </td>\n                   <td>\n                     <div>360</div>\n                   </td>\n                   <td>\n                     <div>2:05:12</div>\n                   </td>\n                   \n                 </tr>\n                 <tr>\n                   \n                   <td>\n                     <div>Project X</div>\n                   </td>\n                   <td>\n                     <div>2</div>\n                   </td>\n                   <td>\n                     <div>360</div>\n                   </td>\n                   <td>\n                     <div>2:05:12</div>\n                   </td>\n                   \n                 </tr>\n                 <tr>\n                   \n                   <td>\n                     <div>Project X</div>\n                   </td>\n                   <td>\n                     <div>2</div>\n                   </td>\n                   <td>\n                     <div>360</div>\n                   </td>\n                   <td>\n                     <div>2:05:12</div>\n                   </td>\n                   \n                 </tr>\n                 <tr>\n                   \n                   <td>\n                     <div>Project X</div>\n                   </td>\n                   <td>\n                     <div>2</div>\n                   </td>\n                   <td>\n                     <div>360</div>\n                   </td>\n                   <td>\n                     <div>2:05:12</div>\n                   </td>\n                   \n                 </tr>\n                 <tr>\n                   \n                   <td>\n                     <div>Project X</div>\n                   </td>\n                   <td>\n                     <div>2</div>\n                   </td>\n                   <td>\n                     <div>360</div>\n                   </td>\n                   <td>\n                     <div>2:05:12</div>\n                   </td>\n                   \n                 </tr>\n                 <tr>\n                   \n                   <td>\n                     <div>Project X</div>\n                   </td>\n                   <td>\n                     <div>2</div>\n                   </td>\n                   <td>\n                     <div>360</div>\n                   </td>\n                   <td>\n                     <div>2:05:12</div>\n                   </td>                 \n                 </tr>\n                  </tbody>\n                </Table>\n                </div>\n              \n      </div>\n    );\n  }\n}\n\nexport default Report;\n","import React from 'react';\nimport { NavLink, Link } from \"react-router-dom\";\nimport { Col, Row, Nav, NavItem, Navbar, NavbarBrand } from 'reactstrap';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport './login.css';\n\nimport logo from '../assets/logo.png';\n\nclass ResetPassword extends React.Component {\n    render() {\n        return (\n            <div>\n            <Navbar color=\"light\" light expand=\"md\">\n              <NavbarBrand href=\"/\" className=\"nav\"><img src={logo} alt=\"VentureSoft Global\" /></NavbarBrand>\n              </Navbar>\n            <Row>\n                <Col md=\"4\"></Col>\n                <Col md=\"4\" className=\"resetpwd-form\">\n            <Formik\n                initialValues={{\n                    email: ''\n                    \n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string()\n                        .email('Email is invalid')\n                        .required('Email is required')\n                })}\n                onSubmit={fields => {\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\n                }}\n            >\n                {({ errors, status, touched }) => (\n                    <Form>\n                        \n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\" className=\"col-form-label\">Email ID</label>\n                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        \n                        \n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\">Reset</button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n            </Col>\n            <Col md=\"4\"></Col>\n            </Row>\n            </div>\n            \n        )\n    }\n}\n\nexport default ResetPassword; ","import React, { useState } from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker,\n  \n} from \"material-ui-pickers\";\n\nfunction FormikDatePicker() {\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <DatePicker \n         keyboard\n         clearable\n        format=\"dd/MM/yyyy\"\n        value={selectedDate} \n        onChange={handleDateChange} />\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default FormikDatePicker;\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nexport const Selectbox = ({ field, form, ...props }) => {\r\n  const { options } = props;\r\n\r\n  return (\r\n    <Select\r\n      {...field}\r\n      {...props}\r\n      options={options}\r\n      value={field.value} // This can be set like this as a result of the change\r\n      onChange={option => form.setFieldValue(field.name, option)}\r\n    />\r\n  );\r\n};\r\nexport default Selectbox;\r\n"," const countryOptions = [\n    { value: 1, label: \"India\" },\n    { value: 2, label: \"UK\" },\n    { value: 3, label: \"Australia\" },\n    { value: 4, label: \"Germany\" },\n    { value: 5, label: \"USA\"}\n    \n  ];\nexport default countryOptions;\n\n  \n  \n\n \n\n","const stateOptions = [\r\n    { value: 1, label: \"Andhra Pradesh\" },\r\n    { value: 2, label: \"Karnataka\" },\r\n    { value: 3, label: \"Telangana\" },\r\n    { value: 4, label: \"Tamilnadu\" },\r\n    { value: 5, label: \"Kerala\"}\r\n    \r\n  ];\r\nexport default stateOptions;\r\n\r\n  \r\n  \r\n\r\n \r\n\r\n","const cityOptions = [\r\n    { value: 1, label: \"Visakhapatnam\" },\r\n    { value: 2, label: \"Benagluru\" },\r\n    { value: 3, label: \"Hyderabad\" },\r\n    { value: 4, label: \"Chennai\" },\r\n    { value: 5, label: \"Kochi\"}\r\n    \r\n  ];\r\nexport default cityOptions;\r\n\r\n  \r\n  \r\n\r\n \r\n\r\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Col, \n  Row,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n  Input,\n  InputGroup,\n  InputGroupAddon\n} from 'reactstrap';\nimport { NavLink as RRNavLink } from 'react-router-dom';\n\nimport './profile.css';\n\nclass ProfileHeader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { isOpen: false }\n    }\n    \n    toggleDropdown = () => {\n        this.setState(prevState => ({\n          isOpen: !prevState.isOpen,\n        }));\n      }\n    \n    render() { \n        const {isOpen} = this.state;\n        \n        return ( \n            <div>\n            <Navbar expand=\"md\" className=\"prf-view\">\n              <Nav className=\"d-md-down-none\" navbar>\n                <NavItem className=\"px-3\">\n                  <NavLink tag={RRNavLink} to=\"/profile\" activeClassName=\"active\" className=\"nav-link\" >Profile</NavLink>\n                </NavItem>\n                <NavItem className=\"px-3\">\n                  <NavLink tag={RRNavLink} to=\"/settings\" activeClassName=\"active\" className=\"nav-link\">Settings</NavLink>\n                </NavItem>\n                </Nav>\n                <Nav className=\"ml-left\">\n                  <button className=\"btn-edit\">Edit<i className=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i></button>\n                  <button className=\"btn-save\">Save</button>\n                </Nav>\n           </Navbar>\n           \n           </div>\n         );\n    }\n}\n\nexport default ProfileHeader;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Col, \r\n  Row,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\nimport FormikDatePicker from './FormikDatePicker';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Selectbox from './Select';\r\nimport countryOptions from './countries';\r\nimport stateOptions from './states';\r\nimport cityOptions from './cities';\r\n\r\nimport Header from '../Header/Header';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nimport logo from '../../../assets/logo.png';\r\n\r\nimport './profile.css';\r\n\r\n\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false, country: '' }\r\n    }\r\n    \r\n    toggleDropdown = () => {\r\n        this.setState(prevState => ({\r\n          isOpen: !prevState.isOpen,\r\n        }));\r\n      }\r\n      selectCountry (val) {\r\n        this.setState({ country: val });\r\n      }\r\n\r\n    render() { \r\n        const {isOpen} = this.state;\r\n        const { country } = this.state;\r\n        \r\n        return ( \r\n            <div>\r\n            <Header />\r\n            <ProfileHeader />\r\n           <Row>\r\n                <Col md=\"3\"></Col>\r\n                <Col md=\"6\" className=\"profile-form\">\r\n           <Formik\r\n                initialValues={{\r\n                    // email: '',\r\n                    password: '',\r\n                    date: '2019-10-24T22:00:00.000Z'\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    // email: Yup.string()\r\n                    //     .email('Email is invalid')\r\n                    //     .required('Email is required'),\r\n                    facode: Yup.number()\r\n                         .min(4, '2FACODE must be 4 digit number')\r\n                         .required('Code required')\r\n                })}\r\n                onSubmit={fields => {\r\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\r\n                }}\r\n            >\r\n                {({ errors, status, touched }) => (\r\n                    <Form>\r\n                        \r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"firstname\" className=\"col-form-label\">First Name</label>\r\n                            <Field name=\"firstname\" type=\"text\" className={'form-control' + (errors.firstname && touched.firstname ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"firstname\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"lastname\" className=\"col-form-label\">Last Name</label>\r\n                            <Field name=\"lastname\" type=\"text\" className={'form-control' + (errors.lastname && touched.lastname ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"lastname\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"email\" className=\"col-form-label\">Email ID</label>\r\n                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"phonenumber\" className=\"col-form-label\">Phone Number</label>\r\n                            <Field name=\"phonenumber\" type=\"number\" className={'form-control' + (errors.phonenumber && touched.phonenumber ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"phonenumber\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"gender\" className=\"col-form-label\">Gender</label>\r\n                            <button className=\"btn-male\">\r\n                            <i className=\"fas fa-male\"></i>Male\r\n                            </button>\r\n                            <button className=\"btn-female\">\r\n                            <i className=\"fas fa-female\"></i>Female\r\n                            </button>\r\n                            <ErrorMessage name=\"gender\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        \r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"dateofbirth\" className=\"col-form-label\">Date Of Birth</label>\r\n                            <FormikDatePicker />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"country\" className=\"col-form-label\">Country</label>\r\n                            <Field name={\"country\"} placeholder=\"Select Country\" options={countryOptions} component={Selectbox} />\r\n                            <ErrorMessage name=\"country\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"state\" className=\"col-form-label\">State</label>\r\n                            <Field name={\"state\"} placeholder=\"Select State\" options={stateOptions} component={Selectbox} />\r\n                            <ErrorMessage name=\"state\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"city\" className=\"col-form-label\">City</label>\r\n                            <Field name={\"city\"} placeholder=\"Select City\" options={cityOptions} component={Selectbox} />\r\n                            <ErrorMessage name=\"city\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"address\" className=\"col-form-label\">Address</label>\r\n                            <Field name=\"address\" type=\"text\" className={'form-control' + (errors.phonenumber && touched.phonenumber ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"address\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"zip\" className=\"col-form-label\">Zipcode</label>\r\n                            <Field name=\"zip\" type=\"number\" className={'form-control' + (errors.phonenumber && touched.phonenumber ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"zip\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"col-6\"></div>\r\n                        </div>\r\n                        \r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            </Col>\r\n            <Col md=\"3\"></Col>\r\n            </Row>\r\n           </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nconst FormikRadioGroup = ({\n  field,\n  form: { touched, errors },\n  name,\n  options,\n  ...props\n}) => {\n  const fieldName = name || field.name;\n \n  return (\n    <React.Fragment>\n      <RadioGroup {...field} {...props} name={fieldName}>\n        {options.map(option => (\n          <FormControlLabel value={option} control={<Radio />} label={option} />\n        ))}\n      </RadioGroup>\n\n      {touched[fieldName] && errors[fieldName] && (\n        <React.Fragment>{errors[fieldName]}</React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default FormikRadioGroup;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Col, \n  Row,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n  Input,\n  InputGroup,\n  InputGroupAddon\n} from 'reactstrap';\nimport { NavLink as RRNavLink } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport Header from '../Header/Header';\nimport ProfileHeader from '../Profile/ProfileHeader';\n\nimport FormikRadioGroup from './FormikRadioGroup';\n\nimport './settings.css';\n\n\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { isOpen: false }\n    }\n    \n    toggleDropdown = () => {\n        this.setState(prevState => ({\n          isOpen: !prevState.isOpen,\n        }));\n      }\n    \n    render() { \n        const {isOpen} = this.state;\n\n        const Schema = Yup.object().shape({\n            password: Yup.string().required(\"This field is required\"),\n            changepassword: Yup.string().when(\"password\", {\n              is: val => (val && val.length > 0 ? true : false),\n              then: Yup.string().oneOf(\n                [Yup.ref(\"password\")],\n                \"Password doesn't match\"\n              )\n            })\n          });\n          \n        \n        return ( \n            <div>\n            <Header />\n            <ProfileHeader />\n           <Row>\n                <Col md=\"2\"></Col>\n                <Col md=\"8\" className=\"settings-form\">\n                <Formik\n                initialValues={{\n                    password: \"\",\n                    changepassword: \"\"\n                }}\n                validationSchema={Schema}\n                onSubmit={() => {}}\n                >\n                {({ values, errors, handleSubmit, handleChange, handleBlur }) => {\n                    return (\n                    <form onSubmit={handleSubmit}>\n                        <label htmlFor=\"passowrd\">New Password</label>\n                        <input\n                        type=\"password\"\n                        name=\"password\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.password}\n                        className=\"pwd\"\n                        />\n                        <span className=\"error\" style={{ color: \"red\" }}>\n                        {errors.password}\n                        </span>\n\n                        <label htmlFor=\"passowrd\">Confirm Password</label>\n                        <input\n                        type=\"password\"\n                        name=\"changepassword\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.changepassword}\n                        className=\"pwd\"\n                        />\n                        <span className=\"error\" style={{ color: \"red\" }}>\n                        {errors.changepassword}\n                        </span>\n                        <div className=\"br-bottom\"></div>\n                        <div className=\"twofactor-auth\">\n                        <label htmlFor=\"twofactorauthentication\" className=\"pd-twofactor\">Two Factor Authentication</label>\n                        <Field\n                            name=\"radioGroup\"\n                            options={[\"Enable\", \"Disable\"]}\n                            component={FormikRadioGroup}\n                        />\n                        <div><button className=\"reset\">Reset</button></div>\n                        </div>\n                    </form>\n                    );\n                }}\n                </Formik>\n            </Col>\n            <Col md=\"2\"></Col>\n            </Row>\n           </div>\n         );\n    }\n}\n\nexport default Settings;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Col, \r\n  Row,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\n\r\nimport './project.css';\r\n\r\nclass ProjectHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false }\r\n    }\r\n    \r\n    toggleDropdown = () => {\r\n        this.setState(prevState => ({\r\n          isOpen: !prevState.isOpen,\r\n        }));\r\n      }\r\n    \r\n    render() { \r\n        const {isOpen} = this.state;\r\n        \r\n        return ( \r\n            <div>\r\n            <Navbar expand=\"md\" className=\"prf-view\">\r\n              <Nav className=\"d-md-down-none\" navbar>\r\n              <NavItem>\r\n                  <h4 className=\"role\">Role</h4>\r\n                </NavItem> \r\n                <NavItem className=\"px-3\">\r\n                  <NavLink tag={RRNavLink} to=\"/production\" activeClassName=\"active\" className=\"nav-link\" >Production</NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"px-3\">\r\n                  <NavLink tag={RRNavLink} to=\"/review\" activeClassName=\"active\" className=\"nav-link\">Review</NavLink>\r\n                </NavItem>\r\n                </Nav>\r\n                <Nav className=\"ml-left\">\r\n                  <button className=\"btn-startwork\"><Link className=\"btn-start\" to=\"/projectx\">Start Work</Link></button>\r\n                </Nav>\r\n           </Navbar>\r\n           \r\n           </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default ProjectHeader;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Col, \r\n  Row,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Header from '../Header/Header';\r\nimport ProjectHeader from './ProjectHeader';\r\n\r\nimport './project.css';\r\n\r\n\r\n\r\nclass Production extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false, country: '' }\r\n    }\r\n    \r\n    toggleDropdown = () => {\r\n        this.setState(prevState => ({\r\n          isOpen: !prevState.isOpen,\r\n        }));\r\n      }\r\n      selectCountry (val) {\r\n        this.setState({ country: val });\r\n      }\r\n\r\n    render() { \r\n        const {isOpen} = this.state;\r\n        const { country } = this.state;\r\n        \r\n        return ( \r\n            <div>\r\n            <Header />\r\n            <ProjectHeader />\r\n           <Row>\r\n                <Col md=\"3\"></Col>\r\n                <Col md=\"6\" className=\"production-form\">\r\n           <Formik\r\n                initialValues={{\r\n                    // email: '',\r\n                    password: '',\r\n                    date: '2019-10-24T22:00:00.000Z'\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    // email: Yup.string()\r\n                    //     .email('Email is invalid')\r\n                    //     .required('Email is required'),\r\n                    facode: Yup.number()\r\n                         .min(4, '2FACODE must be 4 digit number')\r\n                         .required('Code required')\r\n                })}\r\n                onSubmit={fields => {\r\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\r\n                }}\r\n            >\r\n                {({ errors, status, touched }) => (\r\n                    <Form>\r\n                        \r\n                        <Input type=\"textarea\" name=\"text\" />\r\n                       \r\n                       \r\n\r\n                    \r\n\r\n                       \r\n                        \r\n                        \r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            </Col>\r\n            <Col md=\"3\"></Col>\r\n            </Row>\r\n           </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default Production;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Col, \r\n  Row,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Header from '../Header/Header';\r\nimport ProjectHeader from './ProjectHeader';\r\n\r\nimport './project.css';\r\n\r\n\r\n\r\nclass Review extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false, country: '' }\r\n    }\r\n    \r\n    toggleDropdown = () => {\r\n        this.setState(prevState => ({\r\n          isOpen: !prevState.isOpen,\r\n        }));\r\n      }\r\n      selectCountry (val) {\r\n        this.setState({ country: val });\r\n      }\r\n\r\n    render() { \r\n        const {isOpen} = this.state;\r\n        const { country } = this.state;\r\n        \r\n        return ( \r\n            <div>\r\n            <Header />\r\n            <ProjectHeader />\r\n           <Row>\r\n                <Col md=\"3\"></Col>\r\n                <Col md=\"6\" className=\"production-form\">\r\n           <Formik\r\n                initialValues={{\r\n                    // email: '',\r\n                    password: '',\r\n                    date: '2019-10-24T22:00:00.000Z'\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    // email: Yup.string()\r\n                    //     .email('Email is invalid')\r\n                    //     .required('Email is required'),\r\n                    facode: Yup.number()\r\n                         .min(4, '2FACODE must be 4 digit number')\r\n                         .required('Code required')\r\n                })}\r\n                onSubmit={fields => {\r\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\r\n                }}\r\n            >\r\n                {({ errors, status, touched }) => (\r\n                    <Form>\r\n                        \r\n                        <Input type=\"textarea\" name=\"text\" />\r\n                       \r\n                       \r\n\r\n                    \r\n\r\n                       \r\n                        \r\n                        \r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            </Col>\r\n            <Col md=\"3\"></Col>\r\n            </Row>\r\n           </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default Review;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Col, \r\n  Row,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Header from '../Header/Header';\r\nimport ProjectHeader from './ProjectHeader';\r\n\r\nimport './project.css';\r\n\r\n\r\n\r\nclass Productionx extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false }\r\n    }\r\n    \r\n    toggleDropdown = () => {\r\n        this.setState(prevState => ({\r\n          isOpen: !prevState.isOpen,\r\n        }));\r\n      }\r\n      \r\n\r\n    render() { \r\n        const {isOpen} = this.state;\r\n        \r\n        return ( \r\n            <div>\r\n            <Header />\r\n            <Navbar expand=\"md\" className=\"prf-view\">\r\n              <Nav className=\"d-md-down-none\" navbar>\r\n              <NavItem>\r\n                  <h4 className=\"role\">Role</h4>\r\n                </NavItem> \r\n                <NavItem className=\"px-3\">\r\n                  <NavLink tag={RRNavLink} to=\"/projectx\" activeClassName=\"active\" className=\"nav-link\" >Production</NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"px-3\">\r\n                  <NavLink tag={RRNavLink} to=\"/reviewx\" activeClassName=\"active\" className=\"nav-link\">Review</NavLink>\r\n                </NavItem>\r\n                </Nav>\r\n                <Nav className=\"ml-left\">\r\n                  <button className=\"btn-stopwork\"><Link className=\"btn-stop\" to=\"/production\">Stop Work</Link></button>\r\n                </Nav>\r\n           </Navbar>\r\n           <Row>\r\n                <Col md=\"2\"></Col>\r\n                <Col md=\"8\" className=\"production-form\">\r\n           <Formik\r\n                initialValues={{\r\n                    imageurl: '',\r\n                    taskid: '',\r\n                    trainingmaterial: '',\r\n                    comments: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    imageurl: Yup.string()\r\n                        .required('Image url is required'),\r\n                    taskid: Yup.string()\r\n                        .required('Task ID is required'),\r\n                    trainingmaterial: Yup.string()\r\n                        .required('Training Materail is required'),\r\n                    comments: Yup.string()\r\n                        .required('Comments is required')\r\n                    \r\n                })}\r\n                onSubmit={fields => {\r\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\r\n                }}\r\n            >\r\n                {({ errors, status, touched }) => (\r\n                    <Form>\r\n                         <div className=\"form-group\">\r\n                            <label htmlFor=\"imageurl\" className=\"col-form-label\">Image Url:</label>\r\n                            <Field name=\"imageurl\" type=\"text\" placeholder=\"www.images.com\" className={'form-control pr-input' + (errors.imageurl && touched.imageurl ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"imageurl\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"taskid\" className=\"col-form-label\">Task ID:</label>\r\n                            <Field name=\"taskid\" type=\"text\" placeholder=\"www.images.com\" className={'form-control pr-input' + (errors.taskid && touched.taskid ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"taskid\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"trainingmaterial\" className=\"col-form-label\">Training Material:</label>\r\n                            <Field name=\"trainingmaterial\" type=\"text\" placeholder=\"docs.google.com\" className={'form-control pr-input' + (errors.trainingmaterial && touched.trainingmaterial ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"trainingmaterial\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                        <Input type=\"textarea\" name=\"text\" placeholder=\"Image annotation tool with image will load here for annotating\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"comments\" className=\"col-form-label\">Comments</label>\r\n                            <Input type=\"textarea\" name=\"text\" className=\"comment-textbox\" placeholder=\"Write any comments for the task or if any specific requirement\" />\r\n                            <ErrorMessage name=\"comments\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n\r\n                        <button className=\"btn-submit-ans\">Submit Answer</button>\r\n                       \r\n                       \r\n\r\n                    \r\n\r\n                       \r\n                        \r\n                        \r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            </Col>\r\n            <Col md=\"2\"></Col>\r\n            </Row>\r\n           </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default Productionx;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Col, \r\n  Row,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Header from '../Header/Header';\r\nimport ProjectHeader from './ProjectHeader';\r\n\r\nimport './project.css';\r\n\r\n\r\n\r\nclass Reviewx extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false, country: '' }\r\n    }\r\n    \r\n    toggleDropdown = () => {\r\n        this.setState(prevState => ({\r\n          isOpen: !prevState.isOpen,\r\n        }));\r\n      }\r\n      selectCountry (val) {\r\n        this.setState({ country: val });\r\n      }\r\n\r\n    render() { \r\n        const {isOpen} = this.state;\r\n        const { country } = this.state;\r\n        \r\n        return ( \r\n            <div>\r\n            <Header />\r\n            <Navbar expand=\"md\" className=\"prf-view\">\r\n              <Nav className=\"d-md-down-none\" navbar>\r\n              <NavItem>\r\n                  <h4 className=\"role\">Role</h4>\r\n                </NavItem> \r\n                <NavItem className=\"px-3\">\r\n                  <NavLink tag={RRNavLink} to=\"/projectx\" activeClassName=\"active\" className=\"nav-link\" >Production</NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"px-3\">\r\n                  <NavLink tag={RRNavLink} to=\"/reviewx\" activeClassName=\"active\" className=\"nav-link\">Review</NavLink>\r\n                </NavItem>\r\n                </Nav>\r\n                <Nav className=\"ml-left\">\r\n                  <button className=\"btn-stopwork\"><Link className=\"btn-stop\" to=\"/production\">Stop Work</Link></button>\r\n                </Nav>\r\n           </Navbar>\r\n           <Row>\r\n                <Col md=\"2\"></Col>\r\n                <Col md=\"8\" className=\"production-form\">\r\n                <Formik\r\n                initialValues={{\r\n                    imageurl: '',\r\n                    taskid: '',\r\n                    trainingmaterial: '',\r\n                    comments: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    imageurl: Yup.string()\r\n                        .required('Image url is required'),\r\n                    taskid: Yup.string()\r\n                        .required('Task ID is required'),\r\n                    trainingmaterial: Yup.string()\r\n                        .required('Training Materail is required'),\r\n                    comments: Yup.string()\r\n                        .required('Comments is required')\r\n                    \r\n                })}\r\n                onSubmit={fields => {\r\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\r\n                }}\r\n            >\r\n                {({ errors, status, touched }) => (\r\n                    <Form>\r\n                         <div className=\"form-group\">\r\n                            <label htmlFor=\"imageurl\" className=\"col-form-label\">Image Url:</label>\r\n                            <Field name=\"imageurl\" type=\"text\" placeholder=\"www.images.com\" className={'form-control pr-input' + (errors.imageurl && touched.imageurl ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"imageurl\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"taskid\" className=\"col-form-label\">Task ID:</label>\r\n                            <Field name=\"taskid\" type=\"text\" placeholder=\"www.images.com\" className={'form-control pr-input' + (errors.taskid && touched.taskid ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"taskid\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"trainingmaterial\" className=\"col-form-label\">Training Material:</label>\r\n                            <Field name=\"trainingmaterial\" type=\"text\" placeholder=\"docs.google.com\" className={'form-control pr-input' + (errors.trainingmaterial && touched.trainingmaterial ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"trainingmaterial\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                        <Input type=\"textarea\" name=\"text\" placeholder=\"Image annotation tool with image will load here for annotating\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"comments\" className=\"col-form-label\">Comments</label>\r\n                            <Input type=\"textarea\" name=\"text\" className=\"comment-textbox\" placeholder=\"Write any comments for the task or if any specific requirement\" />\r\n                            <ErrorMessage name=\"comments\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n\r\n                        <button className=\"btn-submit-ans\">Submit Answer</button>\r\n                       \r\n                       \r\n\r\n                    \r\n\r\n                       \r\n                        \r\n                        \r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            </Col>\r\n            <Col md=\"2\"></Col>\r\n            </Row>\r\n           </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default Reviewx;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\nimport cx from 'classnames';\r\n\r\nimport logo from '../../../assets/logo.png';\r\nimport s from './arrow.module.css';\r\n\r\nimport './headertwo.css';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false }\r\n    }\r\n    \r\n    toggleDropdown = () => {\r\n        this.setState(prevState => ({\r\n          isOpen: !prevState.isOpen,\r\n        }));\r\n      }\r\n    \r\n    render() { \r\n        const {isOpen} = this.state;\r\n        \r\n        return ( \r\n            <Navbar color=\"light\" light expand=\"md\">\r\n              <NavbarBrand href=\"/\" className=\"nav\"><img src={logo} alt=\"VentureSoft Global\" /></NavbarBrand>\r\n              <Nav className=\"d-md-down-none\" navbar>\r\n                <NavItem className=\"px-3\">\r\n                  <NavLink tag={RRNavLink} to=\"/supervisor\" activeClassName=\"active\" className=\"nav-link\" >Dashboard</NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"px-3\">\r\n                  <NavLink tag={RRNavLink} to=\"/project/supervisor\" activeClassName=\"active\" className=\"nav-link\">Project</NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"px-3\">\r\n                  <NavLink tag={RRNavLink} to=\"/report/supervisor\" activeClassName=\"active\" className=\"nav-link\">Report</NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"px-3\">\r\n                  <NavLink tag={RRNavLink} to=\"/users\" activeClassName=\"active\" className=\"nav-link\">Users</NavLink>\r\n                </NavItem>\r\n                </Nav>\r\n                <Nav className=\"hel-auto\">\r\n                <NavItem>\r\n           \r\n                <div className=\"form-group has-search\">\r\n                  <span className=\"fa fa-search form-control-feedback\"></span>\r\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Search\" />\r\n                </div>\r\n          \r\n                </NavItem>\r\n                  <Dropdown isOpen={isOpen} toggle={this.toggleDropdown}>\r\n                    <DropdownToggle>\r\n                      <span className=\"text-body\">Supervisor 1</span>\r\n                      <i className={cx('fa fa-angle-down ml-sm', s.arrow, {[s.arrowActive]: isOpen})} />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      <DropdownItem><i className=\"fa fa-user\"></i><Link to=\"/role\" className=\"btn-logout\"> Role</Link></DropdownItem>\r\n                      <DropdownItem><i className=\"fa fa-wrench\"></i><Link to=\"/supervisor/settings\" className=\"btn-logout\"> Settings</Link></DropdownItem>\r\n                      <DropdownItem><i className=\"fa fa-lock\"></i><Link to=\"/\" className=\"btn-logout\"> Logout</Link></DropdownItem>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </Nav>\r\n           </Navbar>\r\n         );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Badge,\r\n    Button,\r\n    ButtonDropdown,\r\n    ButtonGroup,\r\n    ButtonToolbar,\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    CardHeader,\r\n    CardTitle,\r\n    Col,\r\n    Dropdown,\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    Progress,\r\n    Row,\r\n    Table,\r\n    Breadcrumb,\r\n    BreadcrumbItem\r\n} from 'reactstrap';\r\nimport Header from '../Header/Header';\r\n\r\nimport './dashboardtwo.css';\r\n\r\nclass DashboardTwo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n\r\n        this.state = {\r\n            dropdownOpen: false,\r\n            radioSelected: 2,\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen,\r\n        });\r\n    }\r\n\r\n    onRadioBtnClick(radioSelected) {\r\n        this.setState({\r\n            radioSelected: radioSelected,\r\n        });\r\n    }\r\n\r\n    loading = () => <div className = \"animated fadeIn pt-1 text-center\" > Loading... </div>\r\n\r\n    render() {\r\n\r\n        return ( \r\n\r\n            <div className = \"animated fadeIn\" >\r\n            <Header />\r\n            \r\n            <Row className = \"gr-message\">\r\n            <Col md = \"4\"> </Col> \r\n            <Col md = \"4\">\r\n            <div className = \"success-message\">\r\n            Hi Supervisor1!You are logged in as Supervisor \r\n            </div>\r\n            </Col> \r\n            </Row>\r\n            <Col md = \"4\"> </Col> \r\n            <div className = \"table-data\">\r\n            <Table >\r\n            \r\n            <thead>\r\n            <tr>\r\n            <th> Project </th> \r\n            <th> Available </th> \r\n            <th> Completed </th> \r\n            <th> Status </th> \r\n            <th> Type </th>\r\n            <th> Project Code </th> \r\n            </tr> \r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n            <td>\r\n            <div><Link className = \"pr-1\"\r\n            to = \"#\"> Project X </Link></div>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\"> XXXXX </span>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\"> XXXXX </span> \r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr active\"> Active </span>\r\n            </td>\r\n            <td>\r\n            <span className = \"db-pr\"> Training </span>\r\n            </td>\r\n            <td>\r\n            <div> PRX </div> \r\n            </td> \r\n            </tr> \r\n            <tr>\r\n            <td>\r\n            <div> <Link className = \"pr-1\"\r\n            to = \"#\" > Project Y </Link></div>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span> \r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr active\" > Active </span>\r\n            </td>\r\n            <td>\r\n            <span className = \"db-pr\" > Training </span>\r\n            </td>\r\n            <td>\r\n            <div> PRY </div> \r\n            </td> \r\n            </tr> \r\n            <tr>\r\n            <td>\r\n            <div> <Link className = \"pr-1\"\r\n            to = \"#\" > Project Z </Link></div>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span> \r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr active\" > Active </span>\r\n            </td>\r\n            <td>\r\n            <span className = \"db-pr\" > Training </span>\r\n            </td>\r\n            <td>\r\n            <div> PRZ </div> \r\n            </td> \r\n            </tr> \r\n            <tr>\r\n            <td>\r\n            <div> <Link className = \"pr-1\"\r\n            to = \"#\" > Project X </Link></div>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span> \r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr active\" > Active </span>\r\n            </td>\r\n            <td>\r\n            <span className = \"db-pr\" > Training </span>\r\n            </td>\r\n            <td>\r\n            <div> PRX </div> \r\n            </td> \r\n            </tr> \r\n            <tr>\r\n            <td>\r\n            <div> <Link className = \"pr-1\"\r\n            to = \"#\" > Project Y </Link></div>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span> \r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr active\" > Active </span>\r\n            </td>\r\n            <td>\r\n            <span className = \"db-pr\" > Training </span>\r\n            </td>\r\n            <td>\r\n            <div> PRY </div> \r\n            </td> \r\n            </tr> \r\n            <tr>\r\n            <td>\r\n            <div> <Link className = \"pr-1\"\r\n            to = \"#\" > Project Z </Link></div>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span> \r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr active\" > Active </span>\r\n            </td>\r\n            <td>\r\n            <span className = \"db-pr\" > Training </span>\r\n            </td>\r\n            <td>\r\n            <div> PRZ </div> \r\n            </td> \r\n            </tr> \r\n            <tr>\r\n            <td>\r\n            <div> <Link className = \"pr-1\"\r\n            to = \"#\" > Project X </Link></div>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span> \r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr active\" > Active </span>\r\n            </td>\r\n            <td>\r\n            <span className = \"db-pr\" > Training </span>\r\n            </td>\r\n            <td>\r\n            <div> PRX </div> \r\n            </td> \r\n            </tr> \r\n            <tr>\r\n            <td>\r\n            <div> <Link className = \"pr-1\"\r\n            to = \"#\" > Project Y </Link></div>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span> \r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr active\" > Active </span>\r\n            </td>\r\n            <td>\r\n            <span className = \"db-pr\" > Training </span>\r\n            </td>\r\n            <td>\r\n            <div> PRY </div> \r\n            </td> \r\n            </tr> \r\n            <tr>\r\n            <td>\r\n            <div> <Link className = \"pr-1\"\r\n            to = \"#\" > Project Z </Link></div>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span> \r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr active\" > Active </span>\r\n            </td>\r\n            <td>\r\n            <span className = \"db-pr\" > Training </span>\r\n            </td>\r\n            <td>\r\n            <div> PRZ </div> \r\n            </td> \r\n            </tr> \r\n            <tr>\r\n            <td>\r\n            <div> <Link className = \"pr-1\"\r\n            to = \"#\" > Project X </Link></div>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span> \r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr active\" > Active </span>\r\n            </td>\r\n            <td>\r\n            <span className = \"db-pr\" > Training </span>\r\n            </td>\r\n            <td>\r\n            <div> PRX </div> \r\n            </td> \r\n            </tr> \r\n            <tr>\r\n            <td>\r\n            <div> <Link className = \"pr-1\"\r\n            to = \"#\" > Project Y </Link></div>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span> \r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr active\" > Active </span>\r\n            </td>\r\n            <td>\r\n            <span className = \"db-pr\" > Training </span>\r\n            </td>\r\n            <td>\r\n            <div> PRY </div> \r\n            </td> \r\n            </tr> \r\n            <tr>\r\n            <td>\r\n            <div> <Link className = \"pr-1\"\r\n            to = \"#\" > Project Z </Link></div>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span>\r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr\" > XXXXX </span> \r\n            </td> \r\n            <td>\r\n            <span className = \"db-pr active\" > Active </span>\r\n            </td>\r\n            <td>\r\n            <span className = \"db-pr\" > Training </span>\r\n            </td>\r\n            <td>\r\n            <div> PRZ </div> \r\n            </td> \r\n            </tr> \r\n           \r\n\r\n\r\n            \r\n           \r\n\r\n\r\n            \r\n           \r\n\r\n\r\n            \r\n            </tbody> \r\n            </Table> \r\n            </div>\r\n\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashboardTwo;","import React, { Component } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  ButtonDropdown,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Progress,\r\n  Row,\r\n  Table,\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n} from 'reactstrap';\r\nimport Header from '../Header/Header';\r\n\r\nimport './project.css';\r\n\r\nclass ProjectSupervisor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      radioSelected: 2,\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen,\r\n    });\r\n  }\r\n\r\n  onRadioBtnClick(radioSelected) {\r\n    this.setState({\r\n      radioSelected: radioSelected,\r\n    });\r\n  }\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n            <Header />\r\n            <Row className=\"gr-message\">\r\n            <Col md=\"4\"></Col>\r\n            <Col md=\"4\">\r\n            <div>\r\n                \r\n            </div>\r\n            </Col>\r\n            </Row>\r\n            <div className=\"table-data\">\r\n                <Table>\r\n                  <thead>\r\n                  <tr>\r\n                    <th>Project</th>\r\n                    <th>Status</th>\r\n                    <th>Type</th>\r\n                    <th>Overview</th>\r\n                    <th>Tasks</th>\r\n                    <th>Sampling</th>\r\n                    <th>View</th>\r\n                    <th>Project Code</th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  <tr>\r\n                   \r\n                    <td>\r\n                      <div>Project X</div>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr active\">Active</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">Training</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">Overview</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">Task</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">Sampling</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">View</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">PRX</span>\r\n                    </td>\r\n                    \r\n                  </tr>\r\n                  <tr>\r\n                   \r\n                    <td>\r\n                      <div>Project X</div>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr paused\">Active</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">Delivery</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">Overview</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">Task</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">Sampling</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">View</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">PRY</span>\r\n                    </td>\r\n                    \r\n                  </tr>\r\n                  <tr>\r\n                   \r\n                   <td>\r\n                     <div>Project X</div>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr active\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Training</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Overview</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Task</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Sampling</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">View</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">PRX</span>\r\n                   </td>\r\n                   \r\n                 </tr>\r\n                 <tr>\r\n                  \r\n                   <td>\r\n                     <div>Project X</div>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr paused\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Delivery</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Overview</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Task</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Sampling</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">View</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">PRY</span>\r\n                   </td>\r\n                   \r\n                 </tr>\r\n                \r\n                 <tr>\r\n                   \r\n                   <td>\r\n                     <div>Project X</div>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr active\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Training</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Overview</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Task</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Sampling</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">View</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">PRX</span>\r\n                   </td>\r\n                   \r\n                 </tr>\r\n                 <tr>\r\n                  \r\n                   <td>\r\n                     <div>Project X</div>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr paused\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Delivery</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Overview</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Task</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Sampling</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">View</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">PRY</span>\r\n                   </td>\r\n                   \r\n                 </tr>\r\n                \r\n                 <tr>\r\n                   \r\n                   <td>\r\n                     <div>Project X</div>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr active\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Training</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Overview</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Task</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Sampling</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">View</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">PRX</span>\r\n                   </td>\r\n                   \r\n                 </tr>\r\n                 <tr>\r\n                  \r\n                   <td>\r\n                     <div>Project X</div>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr paused\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Delivery</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Overview</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Task</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Sampling</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">View</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">PRY</span>\r\n                   </td>\r\n                   \r\n                 </tr>\r\n                 <tr>\r\n                   \r\n                   <td>\r\n                     <div>Project X</div>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr active\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Training</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Overview</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Task</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Sampling</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">View</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">PRX</span>\r\n                   </td>\r\n                   \r\n                 </tr>\r\n                 <tr>\r\n                  \r\n                   <td>\r\n                     <div>Project X</div>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr paused\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Delivery</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Overview</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Task</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">Sampling</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">View</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">PRY</span>\r\n                   </td>\r\n                   \r\n                 </tr>\r\n                \r\n                 \r\n                 \r\n                  </tbody>\r\n                </Table>\r\n                </div>\r\n              \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectSupervisor;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  ButtonDropdown,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Progress,\r\n  Row,\r\n  Table,\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n} from 'reactstrap';\r\nimport Header from '../Header/Header';\r\n\r\nimport './report.css';\r\n\r\nclass ReportSupervisor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      radioSelected: 2,\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen,\r\n    });\r\n  }\r\n\r\n  onRadioBtnClick(radioSelected) {\r\n    this.setState({\r\n      radioSelected: radioSelected,\r\n    });\r\n  }\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n            <Header />\r\n            <Row className=\"gr-message\">\r\n            <Col md=\"4\"></Col>\r\n            <Col md=\"4\">\r\n            <div>\r\n                \r\n            </div>\r\n            </Col>\r\n            </Row>\r\n            <div className=\"table-data\">\r\n                <Table>\r\n                  <thead>\r\n                  <tr>\r\n                    <th>Project</th>\r\n                    <th>Date</th>\r\n                    <th>Agents</th>\r\n                    <th>Reviewers</th>\r\n                    <th>Avg TPT</th>\r\n                    <th>Hours</th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  <tr>\r\n                   \r\n                    <td>\r\n                      <div>Project X</div>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">XXXXX</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">XXXXX</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">XXXXX</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">123</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">03:23:24</span>\r\n                    </td>\r\n                    \r\n                  </tr>\r\n                  <tr>\r\n                   \r\n                    <td>\r\n                      <div>Project Y</div>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">XXXXX</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">XXXXX</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">XXXXX</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">123</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">03:23:24</span>\r\n                    </td>\r\n                    \r\n                  </tr>\r\n                  <tr>\r\n                   \r\n                    <td>\r\n                      <div>Project Z</div>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">XXXXX</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">XXXXX</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">XXXXX</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">123</span>\r\n                    </td>\r\n                    <td>\r\n                      <span className = \"db-pr\">03:23:24</span>\r\n                    </td>\r\n                    \r\n                  </tr>\r\n                  <tr>\r\n                   \r\n                   <td>\r\n                     <div>Project X</div>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">123</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">03:23:24</span>\r\n                   </td>\r\n                   \r\n                 </tr>\r\n                 <tr>\r\n                  \r\n                   <td>\r\n                     <div>Project Y</div>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">123</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">03:23:24</span>\r\n                   </td>\r\n                   \r\n                 </tr>\r\n                 <tr>\r\n                  \r\n                   <td>\r\n                     <div>Project Z</div>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">123</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">03:23:24</span>\r\n                   </td>\r\n                   \r\n                 </tr>\r\n                 <tr>\r\n                   \r\n                   <td>\r\n                     <div>Project X</div>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">123</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">03:23:24</span>\r\n                   </td>\r\n                   \r\n                 </tr>\r\n                 <tr>\r\n                  \r\n                   <td>\r\n                     <div>Project Y</div>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">123</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">03:23:24</span>\r\n                   </td>\r\n                   \r\n                 </tr>\r\n                 <tr>\r\n                  \r\n                   <td>\r\n                     <div>Project Z</div>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">XXXXX</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">123</span>\r\n                   </td>\r\n                   <td>\r\n                     <span className = \"db-pr\">03:23:24</span>\r\n                   </td>\r\n                   \r\n                 </tr>\r\n                 \r\n                  </tbody>\r\n                </Table>\r\n                </div>\r\n              \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReportSupervisor;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Switch = ({ on, onSwitch }) => {\r\n  return (\r\n    <Style>\r\n      <button onClick={onSwitch} className={on ? \"on\" : \"off\"}>\r\n        <span />\r\n      </button>\r\n    </Style>\r\n  );\r\n};\r\n\r\nconst Style = styled.div`\r\n  button {\r\n    width: 100px;\r\n    height: 34px;\r\n    position: relative;\r\n    background: #25a3ec30;\r\n    border-radius: 50px;\r\n    outline: none;\r\n    transition: background 0.4s;\r\n\r\n    span {\r\n      position: absolute;\r\n      top: 4px;\r\n      left: 4px;\r\n      width: 47px;\r\n      height: 26px;\r\n      background: #fff;\r\n      border-radius: 40px;\r\n      transition: all 0.2s cubic-bezier(0, 0, 0.46, 1.82);\r\n      transition: all 0.2s cubic-bezier(0.24, 1.74, 0.92, 0.85);\r\n    }\r\n\r\n    &:active {\r\n      span {\r\n        width: 50px;\r\n      }\r\n\r\n      &.on span {\r\n        margin-left: -54px;\r\n      }\r\n    }\r\n\r\n    &.on {\r\n      background: #7be97b;\r\n      span {\r\n        left: 100%;\r\n        margin-left: -50px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Switch;\r\n","import { Component } from \"react\";\r\n\r\nclass Toggle extends Component {\r\n  state = { \r\n    on: false \r\n  };\r\n\r\n  onToggle = () => {\r\n    this.setState(\r\n      ({ on }) => ({ on: !on }),\r\n      () => {\r\n        if (this.props.onToggle) {\r\n          this.props.onToggle(this.state.on);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return this.props.children({\r\n      on: this.state.on,\r\n      onToggle: this.onToggle\r\n    });\r\n  }\r\n}\r\n\r\nexport default Toggle;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Col, \r\n  Row,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\n\r\nimport Switch from \"./Switch\";\r\nimport Toggle from \"./Toggle\";\r\n\r\nimport './user.css';\r\n\r\nclass UserHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isOpen: false,\r\n            onToggle: false\r\n         }\r\n    }\r\n    \r\n    toggleDropdown = () => {\r\n        this.setState(prevState => ({\r\n          isOpen: !prevState.isOpen,\r\n        }));\r\n      }\r\n     \r\n    onToggle = () => {\r\n        this.setState(prevState => ({\r\n            onToggle: !prevState.onToggle,\r\n        }))\r\n    }\r\n\r\n    render() { \r\n        const {isOpen} = this.state;\r\n        const {onToggle} = this.state;\r\n        \r\n        return ( \r\n            <div>\r\n            <Navbar expand=\"md\" className=\"prf-view\">\r\n              <Nav className=\"d-md-down-none\" navbar>\r\n                <NavItem className=\"px-3\">\r\n                <div className=\"form-group has-search\">\r\n                  <span className=\"fa fa-search form-control-feedback\"></span>\r\n                  <input type=\"text\" className=\"form-control\" placeholder=\"User\" />\r\n                </div>\r\n                </NavItem>\r\n               \r\n                \r\n                </Nav>\r\n                <Nav className=\"ml-user-left\">\r\n                <div className=\"toggle\">\r\n                  <div className=\"toggle-active\">Active</div>\r\n                  <Toggle onToggle={onToggle}>\r\n                    {({ on, onToggle }) => (\r\n                    <div>\r\n                        <Switch on={on} onSwitch={onToggle} />\r\n                    </div>\r\n                    )}\r\n                </Toggle></div>\r\n                  <button className=\"btn-save\"><Link to=\"/create/user\">Create User</Link></button>\r\n                </Nav>\r\n           </Navbar>\r\n           \r\n           </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default UserHeader;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  ButtonDropdown,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Progress,\r\n  Row,\r\n  Table,\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n} from 'reactstrap';\r\nimport Header from '../Header/Header';\r\nimport UserHeader from './UserHeader';\r\n\r\nimport './user.css';\r\n\r\nclass User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      radioSelected: 2,\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen,\r\n    });\r\n  }\r\n\r\n  onRadioBtnClick(radioSelected) {\r\n    this.setState({\r\n      radioSelected: radioSelected,\r\n    });\r\n  }\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n          <Header />\r\n            <UserHeader />\r\n            <Row className=\"gr-message\">\r\n            <Col md=\"4\"></Col>\r\n            <Col md=\"4\">\r\n            <div>\r\n                \r\n            </div>\r\n            </Col>\r\n            </Row>\r\n            <div className=\"table-data\">\r\n                <Table>\r\n                  {/* <thead>\r\n                  <tr>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th></th>\r\n                  </tr>\r\n                  </thead> */}\r\n                  <tbody>\r\n                  <tr>\r\n                   \r\n                    <td>\r\n                        <div>Agent 1</div>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"pr-user\">Settings</span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"pr-user\">2fa</span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"pr-user\">Active</span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"pr-user\">Manage</span>\r\n                    </td>\r\n                    </tr>\r\n                    <tr>\r\n                   \r\n                   <td>\r\n                       <div>Agent 1</div>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Settings</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">2fa</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Manage</span>\r\n                   </td>\r\n                   </tr>\r\n                   <tr>\r\n                   \r\n                   <td>\r\n                       <div>Agent 1</div>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Settings</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">2fa</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Manage</span>\r\n                   </td>\r\n                   </tr>\r\n                   <tr>\r\n                   \r\n                   <td>\r\n                       <div>Agent 1</div>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Settings</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">2fa</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Manage</span>\r\n                   </td>\r\n                   </tr>\r\n                   <tr>\r\n                   \r\n                   <td>\r\n                       <div>Agent 1</div>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Settings</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">2fa</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Manage</span>\r\n                   </td>\r\n                   </tr>\r\n                   <tr>\r\n                   \r\n                   <td>\r\n                       <div>Agent 1</div>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Settings</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">2fa</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Manage</span>\r\n                   </td>\r\n                   </tr> \r\n\r\n                   <tr>\r\n                   <td>\r\n                       <div>Agent 1</div>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Settings</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">2fa</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Manage</span>\r\n                   </td>\r\n                   </tr>\r\n                   <tr>\r\n                   <td>\r\n                       <div>Agent 1</div>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Settings</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">2fa</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Manage</span>\r\n                   </td>\r\n                   </tr>\r\n                   <tr>\r\n                   <td>\r\n                       <div>Agent 1</div>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Settings</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">2fa</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Active</span>\r\n                   </td>\r\n                   <td>\r\n                       <span className=\"pr-user\">Manage</span>\r\n                   </td>\r\n                   </tr>\r\n                  \r\n                  </tbody>\r\n                </Table>\r\n                </div>\r\n              \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Col, \r\n  Row,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\n\r\nimport './user.css';\r\n\r\nclass CreateHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isOpen: false,\r\n         }\r\n    }\r\n    \r\n    toggleDropdown = () => {\r\n        this.setState(prevState => ({\r\n          isOpen: !prevState.isOpen,\r\n        }));\r\n      }\r\n\r\n\r\n  \r\n    render() { \r\n        const {isOpen} = this.state;\r\n        \r\n        return ( \r\n            <div>\r\n            <Navbar expand=\"md\" className=\"prf-view\">\r\n                <Nav className=\"ml-create-left\">\r\n                  <button type=\"submit\" className=\"btn-save\">Create</button>\r\n                </Nav>\r\n           </Navbar>\r\n           \r\n           </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default CreateHeader;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Col,\r\n    Row,\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    Dropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\nimport FormikDatePicker from '../../Set1/Profile/FormikDatePicker';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Selectbox from '../../Set1/Profile/Select';\r\nimport countryOptions from '../../Set1/Profile/countries';\r\nimport stateOptions from '../../Set1/Profile/states';\r\nimport cityOptions from '../../Set1/Profile/cities';\r\n// import FormikRadioGroup from '../../Set1/Settings/FormikRadioGroup';\r\n\r\nimport Header from '../Header/Header';\r\nimport CreateHeader from './CreateHeader';\r\n\r\nimport './user.css';\r\n\r\n\r\n\r\nclass CreateUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false, country: '' }\r\n    }\r\n\r\n    toggleDropdown = () => {\r\n        this.setState(prevState => ({\r\n            isOpen: !prevState.isOpen,\r\n        }));\r\n    }\r\n    selectCountry(val) {\r\n        this.setState({ country: val });\r\n    }\r\n\r\n    render() {\r\n        const { isOpen } = this.state;\r\n        const { country } = this.state;\r\n\r\n        return (\r\n            <div>\r\n            <Header />\r\n            <CreateHeader />\r\n           <Row>\r\n                <Col md=\"3\"></Col>\r\n                <Col md=\"6\" className=\"profile-form\">\r\n           <Formik\r\n                initialValues={{\r\n                    firstname: '',\r\n                    lastname: '',\r\n                    email: '',\r\n                    phonenumber: '',\r\n                    gender: '',\r\n                    dateofbirth: '2019-10-24T22:00:00.000Z',\r\n                    country: '',\r\n                    state: '',\r\n                    city: '',\r\n                    address: '',\r\n                    zip: ''\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    firstname: Yup.string()\r\n                        .required('firstname is required'),\r\n                    lastname: Yup.string()\r\n                    .required('lastname is required'),\r\n                    email: Yup.string()\r\n                        .required('emial is required'),\r\n                    phonenumber: Yup.number()\r\n                    .min(10, 'Phonenumber must be 10 digit number')\r\n                    .required('phonenumber is required'),\r\n                    address: Yup.string()\r\n                        .required('address is required'),\r\n                    country: Yup.string()\r\n                    .required('country is required'),\r\n                    city: Yup.string()\r\n                    .required('city is required'),\r\n                    state: Yup.string()\r\n                    .required('state is required'),\r\n                    zip: Yup.number()\r\n                    .required('emial is required')\r\n\r\n                   \r\n                })}\r\n                onSubmit={fields => {\r\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\r\n                }}\r\n            >\r\n                {({ errors, status, touched }) => (\r\n                    <Form>\r\n                        \r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"firstname\" className=\"col-form-label\">First Name</label>\r\n                            <Field name=\"firstname\" type=\"text\" className={'form-control' + (errors.firstname && touched.firstname ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"firstname\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"lastname\" className=\"col-form-label\">Last Name</label>\r\n                            <Field name=\"lastname\" type=\"text\" className={'form-control' + (errors.lastname && touched.lastname ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"lastname\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"email\" className=\"col-form-label\">Email ID</label>\r\n                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"phonenumber\" className=\"col-form-label\">Phone Number</label>\r\n                            <Field name=\"phonenumber\" type=\"number\" className={'form-control' + (errors.phonenumber && touched.phonenumber ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"phonenumber\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"gender\" className=\"col-form-label\">Gender</label>\r\n                            <button className=\"btn-male\">\r\n                            <i className=\"fas fa-male\"></i>Male\r\n                            </button>\r\n                            <button className=\"btn-female\">\r\n                            <i className=\"fas fa-female\"></i>Female\r\n                            </button>\r\n                            <ErrorMessage name=\"gender\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        \r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"dateofbirth\" className=\"col-form-label\">Date Of Birth</label>\r\n                            <FormikDatePicker />\r\n                            <ErrorMessage name=\"dateofbirth\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"country\" className=\"col-form-label\">Country</label>\r\n                            <Field name={\"country\"} placeholder=\"Select Country\" options={countryOptions} component={Selectbox} />\r\n                            <ErrorMessage name=\"country\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"state\" className=\"col-form-label\">State</label>\r\n                            <Field name={\"state\"} placeholder=\"Select State\" options={stateOptions} component={Selectbox} />\r\n                            <ErrorMessage name=\"state\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"city\" className=\"col-form-label\">City</label>\r\n                            <Field name={\"city\"} placeholder=\"Select City\" options={cityOptions} component={Selectbox} />\r\n                            <ErrorMessage name=\"city\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"address\" className=\"col-form-label\">Address</label>\r\n                            <Field name=\"address\" type=\"text\" className={'form-control' + (errors.phonenumber && touched.phonenumber ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"address\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"zip\" className=\"col-form-label\">Zipcode</label>\r\n                            <Field name=\"zip\" type=\"number\" className={'form-control' + (errors.phonenumber && touched.phonenumber ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"zip\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"col-6\"></div>\r\n                        {/* <button type=\"submit\">Create</button> */}\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            </Col>\r\n            <Col md=\"3\"></Col>\r\n            </Row>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateUser;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Col, \r\n  Row,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\n\r\nimport './profile.css';\r\n\r\nclass ProHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false }\r\n    }\r\n    \r\n    toggleDropdown = () => {\r\n        this.setState(prevState => ({\r\n          isOpen: !prevState.isOpen,\r\n        }));\r\n      }\r\n    \r\n    render() { \r\n        const {isOpen} = this.state;\r\n        \r\n        return ( \r\n            <div>\r\n            <Navbar expand=\"md\" className=\"prf-view\">\r\n              <Nav className=\"d-md-down-none\" navbar>\r\n                <NavItem className=\"px-3\">\r\n                  <NavLink tag={RRNavLink} to=\"/supervisor/settings\" activeClassName=\"active\" className=\"nav-link\">Settings</NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"px-3\">\r\n                  <NavLink tag={RRNavLink} to=\"/role\" activeClassName=\"active\" className=\"nav-link\" >Role</NavLink>\r\n                </NavItem>\r\n                </Nav>\r\n                <Nav className=\"ml-left\">\r\n                  <button className=\"btn-edit\">Edit<i className=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i></button>\r\n                  <button className=\"btn-save\">Save</button>\r\n                </Nav>\r\n           </Navbar>\r\n           \r\n           </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default ProHeader;","import React, { Component } from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n    Col, \r\n    Row   \r\n  } from 'reactstrap';\r\nimport { Checkbox } from 'semantic-ui-react'\r\nimport Header from '../Header/Header';\r\nimport ProHeader from './ProHeader';\r\n\r\nclass Role extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n              <Header />\r\n              <ProHeader />\r\n              <Row>\r\n                <Col md=\"4\"></Col>\r\n                <Col md=\"4\" className=\"profile-form\">\r\n           <Formik\r\n                initialValues={{\r\n                    // email: '',\r\n                    password: '',\r\n                    date: '2019-10-24T22:00:00.000Z'\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    // email: Yup.string()\r\n                    //     .email('Email is invalid')\r\n                    //     .required('Email is required'),\r\n                    facode: Yup.number()\r\n                         .min(4, '2FACODE must be 4 digit number')\r\n                         .required('Code required')\r\n                })}\r\n                onSubmit={fields => {\r\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\r\n                }}\r\n            >\r\n                {({ errors, status, touched }) => (\r\n                    <Form>\r\n                        <div className=\"form-row\">\r\n                        <Checkbox label='Production Agent' /> \r\n                        </div> \r\n                        <div className=\"form-row\">\r\n                        <Checkbox label='Review Agent' /> \r\n                        </div>           \r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            </Col>\r\n            <Col md=\"4\"></Col>\r\n            </Row>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Role;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Col, \r\n  Row,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\nimport FormikDatePicker from '../../Set1/Profile/FormikDatePicker';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Selectbox from '../../Set1/Profile/Select';\r\nimport countryOptions from '../../Set1/Profile/countries';\r\nimport stateOptions from '../../Set1/Profile/states';\r\nimport cityOptions from '../../Set1/Profile/cities';\r\nimport FormikRadioGroup from '../../Set1/Settings/FormikRadioGroup';\r\n\r\nimport Header from '../Header/Header';\r\nimport ProHeader from './ProHeader';\r\n\r\nimport './profile.css';\r\n\r\n\r\n\r\nclass SupervisorSettings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false, country: '' }\r\n    }\r\n    \r\n    toggleDropdown = () => {\r\n        this.setState(prevState => ({\r\n          isOpen: !prevState.isOpen,\r\n        }));\r\n      }\r\n      selectCountry (val) {\r\n        this.setState({ country: val });\r\n      }\r\n\r\n    render() { \r\n        const {isOpen} = this.state;\r\n        const { country } = this.state;\r\n        \r\n        return ( \r\n            <div>\r\n            <Header />\r\n            <ProHeader />\r\n           <Row>\r\n                <Col md=\"2\"></Col>\r\n                <Col md=\"8\" className=\"profile-form\">\r\n           <Formik\r\n                initialValues={{\r\n                    // email: '',\r\n                    password: '',\r\n                    date: '2019-10-24T22:00:00.000Z'\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    // email: Yup.string()\r\n                    //     .email('Email is invalid')\r\n                    //     .required('Email is required'),\r\n                    facode: Yup.number()\r\n                         .min(4, '2FACODE must be 4 digit number')\r\n                         .required('Code required')\r\n                })}\r\n                onSubmit={fields => {\r\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\r\n                }}\r\n            >\r\n                {({ values, handleSubmit, handleChange, handleBlur,errors, status, touched }) => (\r\n                    <Form>\r\n                        <label htmlFor=\"passowrd\">New Password</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.password}\r\n                        className=\"pwd\"\r\n                        />\r\n                        <span className=\"error\" style={{ color: \"red\" }}>\r\n                        {errors.password}\r\n                        </span>\r\n\r\n                        <label htmlFor=\"passowrd\">Confirm Password</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        name=\"changepassword\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.changepassword}\r\n                        className=\"pwd\"\r\n                        />\r\n                        <span className=\"error\" style={{ color: \"red\" }}>\r\n                        {errors.changepassword}\r\n                        </span>\r\n                        <div className=\"br-bottom\"></div>\r\n                        <div className=\"twofactor-auth\">\r\n                        <label htmlFor=\"twofactorauthentication\" className=\"pd-twofactor\">Two Factor Authentication</label>\r\n                        <Field\r\n                            name=\"radioGroup\"\r\n                            options={[\"Enable\", \"Disable\"]}\r\n                            component={FormikRadioGroup}\r\n                        />\r\n                        <div><button className=\"reset\">Reset</button></div>\r\n                        </div>\r\n                       <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"firstname\" className=\"col-form-label\">First Name</label>\r\n                            <Field name=\"firstname\" type=\"text\" className={'form-control' + (errors.firstname && touched.firstname ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"firstname\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"lastname\" className=\"col-form-label\">Last Name</label>\r\n                            <Field name=\"lastname\" type=\"text\" className={'form-control' + (errors.lastname && touched.lastname ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"lastname\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"email\" className=\"col-form-label\">Email ID</label>\r\n                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"phonenumber\" className=\"col-form-label\">Phone Number</label>\r\n                            <Field name=\"phonenumber\" type=\"number\" className={'form-control' + (errors.phonenumber && touched.phonenumber ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"phonenumber\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"gender\" className=\"col-form-label\">Gender</label>\r\n                            <button className=\"btn-male\">\r\n                            <i className=\"fas fa-male\"></i>Male\r\n                            </button>\r\n                            <button className=\"btn-female\">\r\n                            <i className=\"fas fa-female\"></i>Female\r\n                            </button>\r\n                            <ErrorMessage name=\"gender\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        \r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"dateofbirth\" className=\"col-form-label\">Date Of Birth</label>\r\n                            <FormikDatePicker />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"country\" className=\"col-form-label\">Country</label>\r\n                            <Field name={\"country\"} placeholder=\"Select Country\" options={countryOptions} component={Selectbox} />\r\n                            <ErrorMessage name=\"country\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"state\" className=\"col-form-label\">State</label>\r\n                            <Field name={\"state\"} placeholder=\"Select State\" options={stateOptions} component={Selectbox} />\r\n                            <ErrorMessage name=\"state\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"city\" className=\"col-form-label\">City</label>\r\n                            <Field name={\"city\"} placeholder=\"Select City\" options={cityOptions} component={Selectbox} />\r\n                            <ErrorMessage name=\"city\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"address\" className=\"col-form-label\">Address</label>\r\n                            <Field name=\"address\" type=\"text\" className={'form-control' + (errors.phonenumber && touched.phonenumber ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"address\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"zip\" className=\"col-form-label\">Zipcode</label>\r\n                            <Field name=\"zip\" type=\"number\" className={'form-control' + (errors.phonenumber && touched.phonenumber ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"zip\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"col-6\"></div>\r\n                        </div>\r\n                        \r\n                        \r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            </Col>\r\n            <Col md=\"2\"></Col>\r\n            </Row>\r\n           </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default SupervisorSettings;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Login  from './Login/Login';\nimport Dashboard from './components/Set1/Dashboard/Dashboard';\nimport Project from './components/Set1/Project/Project';\nimport Report from './components/Set1/Report/Report';\nimport ResetPassword from './Login/ResetPassword';\nimport Profile from './components/Set1/Profile/Profile';\nimport Settings from './components/Set1/Settings/Settings';\nimport Production from './components/Set1/Project/Production';\nimport Review from './components/Set1/Project/Review';\nimport Productionx from './components/Set1/Project/Productionx';\nimport Reviewx from './components/Set1/Project/Reviewx';\n\nimport DashboardTwo from './components/Set2/Dashboard/DashboardTwo';\nimport ProjectSupervisor from './components/Set2/Project/Project';\nimport ReportSupervisor from './components/Set2/Reports/Report';\nimport User from './components/Set2/Users/User';\nimport CreateUser from './components/Set2/Users/CreateUser';\n\nimport Role from './components/Set2/Profile/Role';\nimport SupervisorSettings from './components/Set2/Profile/Settings';\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n            <Switch>\n              <Route exact path=\"/\" name=\"Agent login\" component={Login} />\n              <Route exact path=\"/login/resetpassword\" name=\"Reset Password\" component={ResetPassword} />\n              <Route exact path=\"/dashboard\" name=\"Dashboard\" component={Dashboard} />\n              <Route exact path=\"/project\" name=\"Project\" component={Project} />\n              <Route exact path=\"/report\" name=\"Report\" component={Report} />\n              <Route exact path=\"/profile\" name=\"Profile\" component={Profile} />\n              <Route exact path=\"/settings\" name=\"Settings\" component={Settings} />\n              <Route exact path=\"/production\" name=\"Production\" component={Production} />\n              <Route exact path=\"/review\" name=\"Review\" component={Review} />\n              <Route exact path=\"/projectx\" name=\"Productionx\" component={Productionx} />\n              <Route exact path=\"/reviewx\" name=\"Reviewx\" component={Reviewx} />\n\n              <Route exact path=\"/supervisor\" name=\"DashboardTwo\" component={DashboardTwo} />\n              <Route exact path=\"/project/supervisor\" name=\"ProjectSupervisor\" component={ProjectSupervisor} />\n              <Route exact path=\"/report/supervisor\" name=\"ReportSupervisor\" component={ReportSupervisor} />\n              <Route exact path=\"/users\" name=\"User\" component={User} />\n              <Route exact path=\"/create/user\" name=\"CreateUser\" component={CreateUser} />\n\n              <Route exact path=\"/role\" name=\"Role\" component={Role} />\n              <Route exact path=\"/supervisor/settings\" name=\"SupervisorSettings\" component={SupervisorSettings} />\n\n            </Switch>\n      </BrowserRouter>\n    </div>\n       \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.879dafbc.png\";"],"sourceRoot":""}